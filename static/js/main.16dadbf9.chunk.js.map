{"version":3,"sources":["images/vector.svg","components/Header.js","images/pen.svg","images/add_button.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","images/close_icon.svg","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ApproveDeleteCardPopup.js","utils/api.js","utils/utils.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logoPath","alt","CurrentUserContext","React","createContext","Card","props","card","onCardClick","onCardLike","onApproveDelition","onPickDeletedCard","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","type","length","Main","cards","onEditAvatar","onEditProfile","onAddPlace","avatar","editImagePath","about","addButtonPath","map","el","Footer","year","Date","getFullYear","ImagePopup","onClose","e","target","classList","contains","closeIconPath","PopupWithForm","isOpen","title","children","buttonText","onSubmit","isFormValid","noValidate","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","isNameValid","setIsNameValid","isAboutValid","setIsAboutValid","nameError","setNameError","aboutError","setAboutError","setButtonText","setIsFormValid","useEffect","preventDefault","userName","userJob","id","value","onInput","validity","valid","validationMessage","onChange","required","placeholder","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","avatarError","setAvatarError","isAvatarValid","setIsAvatarValid","resetInput","current","ref","AddPlacePopup","setLink","isLinkValid","setIsLinkValid","linkError","setLinkError","ApproveDeleteCardPopup","api","config","this","_baseUrl","url","_headers","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_handlePromise","data","method","body","JSON","stringify","authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isApproveCardDeletePopupOpen","setIsApproveCardDeletePopupOpen","selectedCard","setSelectedCard","deletedCard","setDeletedCard","setCurrentUser","setCards","closeEditAvatarPopup","closeEditProfilePopup","closeAddPlacePopup","closeApproveCardDeletePopup","all","getUserInfo","getInitialCards","userData","catch","err","console","log","message","Provider","removeLikeFromCard","newCard","c","putLikeOnCard","editUserInfo","user","addNewCard","deleteCard","filter","changeUserAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16dadbf9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vector.bbe2a6ea.svg\";","import React from 'react';\r\n\r\nimport logoPath from '../images/vector.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={logoPath} alt=\"Логотип\" className=\"logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/pen.a086f758.svg\";","export default __webpack_public_path__ + \"static/media/add_button.d5d6f8af.svg\";","import React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext;","import React from 'react';\r\n\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const { card, onCardClick, onCardLike, onApproveDelition, onPickDeletedCard } = props;\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n  const cardLikeButtonClassName = (`article__like-button ${isLiked && 'article__like-button_active'}`);\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLike() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleApproveDelete() {\r\n    onApproveDelition();\r\n    onPickDeletedCard(card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"article\">\r\n      <img src={card.link} alt={card.name} onClick={handleClick} className=\"article__image\" />\r\n      {isOwn && <button type=\"button\" name=\"deleteButton\" className=\"article__delete-button article__delete-button_active\" onClick={handleApproveDelete}></button>}\r\n      <div className=\"article__bottom-part\">\r\n        <h2 className=\"article__name\">{card.name}</h2>\r\n        <div className=\"article__like-field\">\r\n          <button type=\"button\" name=\"likeButton\" className={cardLikeButtonClassName} onClick={handleLike}></button>\r\n          <p className=\"article__like-quantity\">{card.likes.length}</p>\r\n        </div>         \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport editImagePath from '../images/pen.svg';\r\nimport addButtonPath from '../images/add_button.svg';\r\nimport Card from './Card';\r\n\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n    const { cards, onCardLike, onApproveDelition, onPickDeletedCard, onEditAvatar, onEditProfile, onAddPlace, onCardClick } = props;\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return(\r\n    <main className=\"content\">\r\n    <section className=\"profile\">\r\n      <div className=\"profile__avatar\" onClick={onEditAvatar}>\r\n        <img src={currentUser.avatar} alt=\"Фотография профиля\" className=\"profile__photo\" />\r\n        <div className=\"profile__shadow\">\r\n          <img src={editImagePath} alt=\"Перо\" className=\"profile__edit-image\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"profile__info\">\r\n        <div className=\"profile__edition\">\r\n          <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n          <button type=\"button\" name=\"editButton\" className=\"profile__button profile__button_edit\" onClick={onEditProfile}></button>\r\n        </div>\r\n        <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n      </div>\r\n      <button type=\"button\" name=\"addButton\" className=\"profile__button profile__button_add\" onClick={onAddPlace}><img src={addButtonPath} alt=\"Кнопка добавления\" className=\"profile__icon\" /></button>\r\n    </section>\r\n\r\n    <section className=\"elements\">\r\n      {cards.map((el) => (\r\n        <Card key={el._id} card={el} onCardClick={onCardClick} onCardLike={onCardLike} onApproveDelition={onApproveDelition} onPickDeletedCard={onPickDeletedCard} />\r\n      ))}\r\n    </section>\r\n  </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  const year = new Date().getFullYear();\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; {year} Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/close_icon.44bb1e48.svg\";","import React from 'react';\r\n\r\nimport closeIconPath from '../images/close_icon.svg';\r\n\r\nfunction ImagePopup(props) {\r\n  const { card, onClose } = props;\r\n\r\n  // Функция для закрытия окна при клике по оверлею\r\n  function handleCloseOverlay(e) {\r\n    if (e.target.classList.contains('popup')) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={`popup popup_picture ${card.link && \"popup_opened\"}`} onClick={handleCloseOverlay}>\r\n      <div className=\"popup__card-container\">\r\n        <button type=\"button\" name=\"closeButton\" onClick={onClose} className=\"popup__close-icon popup__close-icon_pic\"><img src={closeIconPath} alt=\"Закрывающий крестик\" className=\"popup__close-image\" /></button>\r\n        <img src={card.link} alt={card.name} className=\"popup__image\" />\r\n        <p className=\"popup__paragraph\">{card.name}</p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\n\r\nimport closeIconPath from '../images/close_icon.svg';\r\n\r\nfunction PopupWithForm(props) {\r\n  const { isOpen, name, onClose, title, children, buttonText, onSubmit, isFormValid } = props;\r\n\r\n  // Функция для закрытия окна при клике по оверлею\r\n  function handleCloseOverlay(e) {\r\n    if (e.target.classList.contains('popup')) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={`popup popup_${name} ${isOpen && \"popup_opened\"}`} onClick={handleCloseOverlay}>\r\n      <button type=\"button\" name=\"closeButton\" onClick={onClose} className=\"popup__close-icon\"><img src={closeIconPath} alt=\"Закрывающий крестик\" className=\"popup__close-image\" /></button>\r\n      <form noValidate name={`${name}-form`} className={`popup__container popup__container_${name}`} onSubmit={onSubmit}>\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        {children}\r\n        <button type=\"submit\" name=\"submitButton\" className={`popup__button popup__button_${name} ${isFormValid === false && \"popup__button_disabled\"}`}>{buttonText}</button>\r\n      </form>\r\n    </section>    \r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const { isOpen, onClose, onUpdateUser } = props;\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n  const [isNameValid, setIsNameValid] = React.useState(true);\r\n  const [isAboutValid, setIsAboutValid] = React.useState(true);\r\n  const [nameError, setNameError] = React.useState('');\r\n  const [aboutError, setAboutError] = React.useState('');\r\n\r\n  const [buttonText, setButtonText] = React.useState('Сохранить');\r\n  const [isFormValid, setIsFormValid] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  React.useEffect(() => {\r\n    resetButtonText();\r\n  }, [isOpen]);\r\n\r\n  // Функции для валидации полей формы\r\n  function handleNameInput(e) {\r\n    setIsNameValid(e.target.validity.valid);\r\n    if (!e.target.validity.valid) {\r\n      setNameError(e.target.validationMessage);\r\n      setIsFormValid(false);\r\n    } else if (description && isAboutValid) {\r\n      setIsFormValid(true);\r\n    }\r\n  }\r\n\r\n  function handleAboutInput(e) {\r\n    setIsAboutValid(e.target.validity.valid);\r\n    if (!e.target.validity.valid) {\r\n      setAboutError(e.target.validationMessage);\r\n      setIsFormValid(false);\r\n    } else if (name && isNameValid) {\r\n      setIsFormValid(true);\r\n    }\r\n  }\r\n\r\n  // Функции для передачи данных стейт-переменным\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  // Функции для изменения текста на кнопке отправки\r\n  function changeButtonText() {\r\n    setButtonText('Сохранение...');\r\n  }\r\n\r\n  function resetButtonText() {\r\n    setButtonText('Сохранить');\r\n  }\r\n\r\n  // Обработчик отправки данных\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    changeButtonText();\r\n    setIsFormValid(false);\r\n\r\n    onUpdateUser({\r\n      userName: name,\r\n      userJob: description\r\n    })    \r\n  }\r\n\r\n  // Функция для закрытия окна\r\n  function closePopup() {\r\n    onClose();\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n    setIsNameValid(true);\r\n    setIsAboutValid(true);\r\n    setIsFormValid(false);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm isOpen={isOpen} name=\"edition\" onClose={closePopup} title=\"Редактировать профиль\" buttonText={buttonText} onSubmit={handleSubmit} isFormValid={isFormValid}>\r\n      <input id=\"name-input\" value={name || ''} onInput={handleNameInput} onChange={handleNameChange} required type=\"text\" name=\"userName\" placeholder=\"Имя пользователя\" minLength=\"2\" maxLength=\"40\" className={`popup__text ${isNameValid === false && \"popup__text_type_error\"}`} />\r\n      <span className={`popup__text-error ${isNameValid === false && \"popup__text-error_visible\"}`}>{nameError}</span>\r\n      <input id=\"job-input\" value={description || ''} onInput={handleAboutInput} onChange={handleDescriptionChange} required type=\"text\" name=\"userJob\" placeholder=\"Профессия пользователя\" minLength=\"2\" maxLength=\"200\" className={`popup__text ${isAboutValid === false && \"popup__text_type_error\"}`} />\r\n      <span className={`popup__text-error ${isAboutValid === false && \"popup__text-error_visible\"}`}>{aboutError}</span>\r\n    </PopupWithForm>  \r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\n\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const { isOpen, onClose, onUpdateAvatar } = props;\r\n  const avatarRef = React.useRef();\r\n\r\n  const [buttonText, setButtonText] = React.useState('Сохранить');\r\n  const [avatarError, setAvatarError] = React.useState('');\r\n  const [isAvatarValid, setIsAvatarValid] = React.useState(true);\r\n  const [isFormValid, setIsFormValid] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    resetButtonText();\r\n    resetInput();\r\n  }, [isOpen]);\r\n\r\n  // Функции для изменения текста на кнопке отправки\r\n  function changeButtonText() {\r\n    setButtonText('Сохранение...');\r\n  }\r\n\r\n  function resetButtonText() {\r\n    setButtonText('Сохранить');\r\n  }\r\n\r\n  // Функция для сброса полей формы\r\n  function resetInput() {\r\n    avatarRef.current.value = '';\r\n  }\r\n\r\n  // Функция для валидации полей формы\r\n  function handleAvatarInput(e) {\r\n    setIsAvatarValid(e.target.validity.valid);\r\n    if (!e.target.validity.valid) {\r\n      setAvatarError(e.target.validationMessage);\r\n      setIsFormValid(false);\r\n    } else {\r\n      setIsFormValid(true);\r\n    }\r\n  }\r\n\r\n  // Обработчик отправки данных\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    changeButtonText();\r\n    setIsFormValid(false);\r\n\r\n    onUpdateAvatar({\r\n      avatar: avatarRef.current.value\r\n    })\r\n  }\r\n\r\n  // Функция для закрытия окна\r\n  function closePopup() {\r\n    onClose();\r\n    resetInput();\r\n    setIsAvatarValid(true);\r\n    setIsFormValid(false);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm isOpen={isOpen} name=\"avatar\" onClose={closePopup} title=\"Обновить аватар\" buttonText={buttonText} onSubmit={handleSubmit} isFormValid={isFormValid}>\r\n      <input id=\"avatar-input\" ref={avatarRef} onInput={handleAvatarInput} required type=\"url\" name=\"avatar\" placeholder=\"Ссылка на изображение\"\r\n      className={`popup__text ${isAvatarValid === false && \"popup__text_type_error\"}`} />\r\n      <span className={`popup__text-error ${isAvatarValid === false && \"popup__text-error_visible\"}`}>{avatarError}</span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\n\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const { isOpen, onClose, onAddPlace } = props;\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n  const [isNameValid, setIsNameValid] = React.useState(true);\r\n  const [isLinkValid, setIsLinkValid] = React.useState(true);\r\n  const [nameError, setNameError] = React.useState('');\r\n  const [linkError, setLinkError] = React.useState('');\r\n\r\n  const [buttonText, setButtonText] = React.useState('Создать');\r\n  const [isFormValid, setIsFormValid] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    resetButtonText();\r\n    resetInput();\r\n  }, [isOpen]);\r\n\r\n  // Функции для валидации полей формы\r\n  function handleNameInput(e) {\r\n    setIsNameValid(e.target.validity.valid);\r\n    if (!e.target.validity.valid) {\r\n      setNameError(e.target.validationMessage);\r\n      setIsFormValid(false);\r\n    } else if (link && isLinkValid) {\r\n      setIsFormValid(true);\r\n    }\r\n  }\r\n\r\n  function handleLinkInput(e) {\r\n    setIsLinkValid(e.target.validity.valid);\r\n    if (!e.target.validity.valid) {\r\n      setLinkError(e.target.validationMessage);\r\n      setIsFormValid(false);\r\n    } else if (name && isNameValid) {\r\n      setIsFormValid(true);\r\n    }\r\n  }\r\n\r\n  // Функции для передачи данных стейт-переменным\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleLinkChange(e) {\r\n    setLink(e.target.value);\r\n  }\r\n\r\n  // Функции для изменения текста на кнопке отправки\r\n  function changeButtonText() {\r\n    setButtonText('Сохранение...');\r\n  }\r\n\r\n  function resetButtonText() {\r\n    setButtonText('Создать');\r\n  }\r\n\r\n  // Функция для сброса полей формы\r\n  function resetInput() {\r\n    setName('');\r\n    setLink('');\r\n  }\r\n\r\n  // Обработчик отправки данных\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    changeButtonText();\r\n    setIsFormValid(false);\r\n\r\n    onAddPlace({\r\n      name: name,\r\n      link: link\r\n    })\r\n  }\r\n\r\n  // Функция для закрытия окна\r\n  function closePopup() {\r\n    onClose();\r\n    resetInput();\r\n    setIsNameValid(true);\r\n    setIsLinkValid(true);\r\n    setIsFormValid(false);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm isOpen={isOpen} name=\"addition\" onClose={closePopup} title=\"Новое место\" buttonText={buttonText} onSubmit={handleSubmit} isFormValid={isFormValid}>\r\n      <input id=\"place-input\" value={name} onInput={handleNameInput} onChange={handleNameChange} required type=\"text\" name=\"name\" placeholder=\"Название места\" minLength=\"2\" maxLength=\"30\" className={`popup__text ${isNameValid === false && \"popup__text_type_error\"}`} />\r\n      <span className={`popup__text-error ${isNameValid === false && \"popup__text-error_visible\"}`}>{nameError}</span>\r\n      <input id=\"link-input\" value={link} onInput={handleLinkInput} onChange={handleLinkChange} required type=\"url\" name=\"link\" placeholder=\"Ссылка на изображение\" className={`popup__text ${isLinkValid === false && \"popup__text_type_error\"}`} />\r\n      <span className={`popup__text-error ${isLinkValid === false && \"popup__text-error_visible\"}`}>{linkError}</span>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\n\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ApproveDeleteCardPopup(props) {\r\n  const { card, isOpen, onClose, onApproveDelition } = props;\r\n  const [buttonText, setButtonText] = React.useState('Да');\r\n\r\n  React.useEffect(() => {\r\n    resetButtonText();\r\n  }, [isOpen]);\r\n\r\n  // Функции для изменения текста на кнопке отправки\r\n  function changeButtonText() {\r\n    setButtonText('Удаление...');\r\n  }\r\n\r\n  function resetButtonText() {\r\n    setButtonText('Да');\r\n  }\r\n\r\n  // Обработчик отправки данных\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    changeButtonText();\r\n\r\n    onApproveDelition(card);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm isOpen={isOpen} name=\"delition\" onClose={onClose} title=\"Вы уверены?\" buttonText={buttonText} onSubmit={handleSubmit}/>\r\n  )\r\n}\r\n\r\nexport default ApproveDeleteCardPopup;","import { options } from './utils';\r\n\r\nclass Api {\r\n  constructor(config) {\r\n    this._baseUrl = config.url;\r\n    this._headers = config.headers;\r\n  }\r\n\r\n  _handlePromise(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Ошибка ${res.status}`));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers\r\n    })\r\n    .then(res => this._handlePromise(res));\r\n  }\r\n\r\n  editUserInfo(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.userName,\r\n        about: data.userJob\r\n      })\r\n    })\r\n    .then(res => this._handlePromise(res));\r\n  }\r\n\r\n  changeUserAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    })\r\n    .then(res => this._handlePromise(res));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers\r\n    })\r\n    .then(res => this._handlePromise(res));   \r\n  }\r\n\r\n  addNewCard(data) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n    .then(res => this._handlePromise(res));\r\n  } \r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n    .then(res => this._handlePromise(res));\r\n  }\r\n\r\n  putLikeOnCard(id) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: this._headers\r\n    })\r\n    .then(res => this._handlePromise(res))\r\n  }\r\n\r\n  removeLikeFromCard(id) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n    .then(res => this._handlePromise(res))\r\n  }\r\n}\r\n\r\n// Создание экземпляра класса Api\r\nconst api = new Api(options);\r\n\r\nexport default api;","// Объект настроек для экземпляра класса Api\r\nexport const options = {\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-21',\r\n  headers: {\r\n    authorization: 'b75b73b9-d862-4271-a664-b5dd34a2f2e6',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n","import React from 'react';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ApproveDeleteCardPopup from './ApproveDeleteCardPopup';\nimport api from '../utils/api';\n\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isApproveCardDeletePopupOpen, setIsApproveCardDeletePopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [deletedCard, setDeletedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  // Загрузка на страницу данных пользователя и карточек с сервера при запуске приложения\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userData, cards]) => {\n        setCurrentUser(userData);\n        setCards(cards);\n      })\n      .catch(err => {\n        console.log('Ошибка при загрузке данных пользователя и карточек', err.message);\n      })\n  },\n  []);\n\n  // Функции открытия модальных окон\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);    \n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleApproveDelitionClick() {\n    setIsApproveCardDeletePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // Функции закрытия модальных окон\n  function closeEditAvatarPopup() {\n    setIsEditAvatarPopupOpen(false);\n  }\n\n  function closeEditProfilePopup() {\n    setIsEditProfilePopupOpen(false);\n  }\n\n  function closeAddPlacePopup() {\n    setIsAddPlacePopupOpen(false);\n  }\n\n  function closeApproveCardDeletePopup() {\n    setIsApproveCardDeletePopupOpen(false);\n  }\n\n  function closeImagePopup() {\n    setSelectedCard({});\n  }\n\n  // Функции для обновления данных пользователя\n  function handleUpdateUser(data) {\n    api.editUserInfo(data)\n      .then((user) => {\n        setCurrentUser(user);\n        closeEditProfilePopup();\n      })\n      .catch(err => {\n        console.log('Ошибка при попытке обновить данные пользователя', err.message, data);\n      });\n  }\n\n  function handleUpdateAvatar(data) {\n    api.changeUserAvatar(data)\n      .then((user) => {\n        setCurrentUser(user);\n        closeEditAvatarPopup();\n      })\n      .catch(err => {\n        console.log('Ошибка при попытке обновить фотографию пользователя', err.message);\n      });\n  }\n\n  // Функция для добавления новой карточки\n  function handleAddPlaceSubmit(card) {\n    api.addNewCard(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAddPlacePopup();\n      })\n      .catch(err => {\n        console.log('Ошибка при попытке добавить новую карточку', err.message);\n      });\n  }\n\n  // Сохранение объекта карточки, на иконку удаления которой нажали\n  function handlePickDeletedCard(card) {\n    setDeletedCard(card);\n  }\n\n  // Функция для обработки лайков (добавить или убрать лайк, в заисимости от того, лайкали ли Вы эту карточку ранее)\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    if (isLiked) {\n      api.removeLikeFromCard(card._id)\n      .then((newCard) => {\n        setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(err => {\n        console.log('Ошибка при попытке поставить/убрать лайк карточке', err.message);\n      })\n    } else {\n      api.putLikeOnCard(card._id)\n      .then((newCard) => {\n        setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(err => {\n        console.log('Ошибка при попытке поставить/убрать лайк карточке', err.message);\n      })\n    }\n  }\n\n  // Функция для удаления карточки\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards((cards) => cards.filter((c) => c._id !== card._id));\n        closeApproveCardDeletePopup();\n      })\n      .catch(err => {\n        console.log('Ошибка при попытке удалить карточку', err.message);\n      }); \n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n      <div className=\"page__container\">\n\n        <Header />\n\n        <Main cards={cards} onCardLike={handleCardLike} onApproveDelition={handleApproveDelitionClick} onPickDeletedCard={handlePickDeletedCard} onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onCardClick={handleCardClick} />\n\n        <Footer />\n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeEditProfilePopup} onUpdateUser={handleUpdateUser} />\n\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAddPlacePopup} onAddPlace={handleAddPlaceSubmit} /> \n\n        <ImagePopup card={selectedCard} onClose={closeImagePopup} />\n\n        <ApproveDeleteCardPopup card={deletedCard} isOpen={isApproveCardDeletePopupOpen} onClose={closeApproveCardDeletePopup} onApproveDelition={handleCardDelete} />\n\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeEditAvatarPopup} onUpdateAvatar={handleUpdateAvatar} />\n\n      </div>\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}